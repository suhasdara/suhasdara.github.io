{"version":3,"file":"component---src-templates-blog-tag-page-temp-js-7eb8db1cbf47e9719934.js","mappings":"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","sources":["webpack://the-suhas-space/./node_modules/react-bootstrap/esm/Badge.js","webpack://the-suhas-space/./src/components/blogRow.js","webpack://the-suhas-space/./src/components/blogList.js","webpack://the-suhas-space/./src/templates/blogTagPageTemp.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nimport \"../styles/components/blogRow.css\";\n\nfunction BlogRow({ title, date, timeToRead, excerpt, link }) {\n  date = new Date(date);\n  date = date.toLocaleDateString(undefined, {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n\n  return (\n    <Row className=\"py-3\">\n      <Col>\n        <Row>\n          <Col\n            className=\"blog-first-col d-flex flex-column justify-content-center px-0\"\n            md=\"10\" xs=\"12\"\n          >\n            <Link to={link}>\n              <h3 className=\"text-light mb-md-2 mb-1\">{title}</h3>\n            </Link>\n          </Col>\n          <Col\n            className=\"blog-second-col d-flex flex-column justify-content-center align-items-md-end px-0\"\n            md=\"2\" xs=\"12\"\n          >\n            <h5 className=\"text-muted mb-md-0 mb-1\">{date}</h5>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"d-flex flex-column justify-content-center px-0\">\n            <h6 className=\"my-0 font-weight-normal\">\n              <strong><em>{timeToRead} min. read: </em></strong>\n              {excerpt}&nbsp;\n              <Link to={link}>Read more</Link>\n            </h6>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n}\n\nBlogRow.defaultProps = {\n  excerpt: \"\",\n}\n\nBlogRow.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  excerpt: PropTypes.string,\n  link: PropTypes.string.isRequired,\n};\n\nexport default BlogRow;\n","import React from \"react\";\nimport { Badge, Col, Container, Row } from \"react-bootstrap\";\nimport { Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport BlogRow from \"../components/blogRow\";\nimport SubscribeButton from \"../components/subscribeButton\";\n\nexport default function BlogList({ data }) {\n  const blogs = data.posts.edges;\n  const tags = data.tags.group;\n  let totalBlogs = 0;\n  data.tags.group.forEach((item) => totalBlogs += item.totalCount);\n\n  return (\n    <Layout active=\"blogs\">\n      <SEO title=\"Blogs\" />\n      <div className=\"pt-5\">\n        <Container>\n          <Row className=\"pb-1\">\n            <Col/>\n            <Col>\n              <h1 className=\"text-center text-light\">Blogs</h1>\n            </Col>\n            <Col className=\"d-flex flex-column align-items-end\">\n              <SubscribeButton text=\"Subscribe\" />\n            </Col>\n          </Row>\n          <Row className=\"pb-2 d-flex flex-row justify-content-center\">\n            &#9679;\n            <Link\n              to=\"/blogs/\"\n              className=\"mx-2 mb-1 py-0 btn btn-dark\"\n              activeStyle={\n                {color: \"#212529\", backgroundColor: \"#f8f9fa\", borderColor: \"#f8f9fa\"}\n              } //explicit btn-light precedence issues\n            >\n              All <Badge pill variant=\"info\">{totalBlogs}</Badge>\n            </Link>\n            &#9679;\n            {tags.map((t, i) => (\n              <Link\n                key={i}\n                to={`/blogs=${t.fieldValue}/`}\n                className=\"ml-2 mb-1 py-0 btn btn-dark\"\n                activeStyle={\n                  {color: \"#212529\", backgroundColor: \"#f8f9fa\", borderColor: \"#f8f9fa\"}\n                } //explicit btn-light precedence issues\n              >\n                {t.fieldValue[0].toUpperCase() + t.fieldValue.slice(1)}\n                &nbsp;\n                <Badge pill variant=\"info\">{t.totalCount}</Badge>\n              </Link>\n            ))}\n          </Row>\n          {blogs.map((project) => (\n            <BlogRow\n              key={project.node.id}\n              title={project.node.frontmatter.title}\n              date={project.node.frontmatter.date}\n              link={project.node.frontmatter.slug}\n              excerpt={project.node.fields.excerpt}\n              timeToRead={Math.ceil(project.node.timeToRead * 1.25)} //I'm a slow reader\n            />\n          ))}\n        </Container>\n      </div>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport BlogList from \"../components/blogList\";\n\nexport default function BlogTagPageTemp({ data }) {\n  return (\n    <BlogList data={data} />\n  );\n}\n\nexport const blogsTagQuery = graphql`\n  query BlogsByTagIndexQuery($tag: String!) {\n    posts: allMdx(\n      sort: { order: DESC, fields: frontmatter___date }\n      filter: { frontmatter: { postType: { eq: \"blog\" }, tags: { in: [$tag] } } } \n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          fields {\n            excerpt\n          }\n          frontmatter {\n            title\n            slug\n            date\n          }\n        }\n      }\n    }\n    tags: allMdx {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n"],"names":["_excluded","Badge","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","prefix","displayName","defaultProps","BlogRow","title","date","timeToRead","excerpt","link","Date","toLocaleDateString","undefined","year","month","day","Row","Col","md","xs","Link","to","BlogList","data","blogs","posts","edges","tags","group","totalBlogs","forEach","item","totalCount","active","Container","text","activeStyle","color","backgroundColor","borderColor","map","t","i","key","fieldValue","toUpperCase","slice","project","node","id","frontmatter","slug","fields","Math","ceil","BlogTagPageTemp"],"sourceRoot":""}