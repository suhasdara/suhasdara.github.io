{"version":3,"file":"component---src-pages-projects-js-440cb3925862980df655.js","mappings":"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","sources":["webpack://the-suhas-space/./node_modules/react-bootstrap/esm/divWithClassName.js","webpack://the-suhas-space/./src/components/dateRange.js","webpack://the-suhas-space/./node_modules/react-bootstrap/esm/CardDeck.js","webpack://the-suhas-space/./node_modules/react-bootstrap/esm/CardImg.js","webpack://the-suhas-space/./node_modules/react-bootstrap/esm/Card.js","webpack://the-suhas-space/./src/components/projectCard.js","webpack://the-suhas-space/./src/pages/projects.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return /*#__PURE__*/React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import React from \"react\";\n\nconst getDate = (dateStr) => {\n  let date = new Date(dateStr);\n  return date.toLocaleDateString(undefined, {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n};\n\nconst DateRange = ({ startDates, endDates }) => {\n  return (\n    <>\n      {startDates.map((s, i) => (\n        <span key={i}>\n          <span className=\"d-inline-block\">{getDate(s)}</span>\n          <span className=\"d-inline-block\">&nbsp;-&nbsp;</span>\n          <span className=\"d-inline-block\">\n            {endDates[i] === \"2099-12-31T00:00:00.000Z\"\n              ? \"Current\"\n              : getDate(endDates[i])}\n            {i !== startDates.length - 1 && \",\"}\n          </span>\n          {i !== startDates.length - 1 && (\n            <span className=\"d-inline-block\">&nbsp;and&nbsp;</span>\n          )}\n        </span>\n      ))}\n    </>\n  );\n};\n\nexport default DateRange;\n","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('card-deck');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nimport DateRange from \"./dateRange\";\n\nimport \"../styles/components/projectCard.css\";\n\nconst ProjectCardImg = (props) => {\n  let { src, alt, ...rest } = props;\n  return (\n    <div className=\"d-flex justify-content-center align-items-center pb-2 card-img-top-div\">\n      <img src={src} alt={alt} {...rest} />\n    </div>\n  );\n};\n\nfunction ProjectCard({ title, imgSrc, startDates, endDates, link }) {\n  return (\n    <Card className=\"bg-light text-center mb-3\">\n      <Card.Img as={ProjectCardImg} src={imgSrc} alt={title} variant=\"top\" />\n      <Card.Body className=\"d-flex flex-column justify-content-center\">\n        <Card.Title className=\"text-dark\">{title}</Card.Title>\n        <Card.Subtitle className=\"text-muted small\">\n          <DateRange startDates={startDates} endDates={endDates} />\n        </Card.Subtitle>\n      </Card.Body>\n      <Link to={link} className=\"stretched-link\" />\n    </Card>\n  );\n}\n\nProjectCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  imgSrc: PropTypes.string.isRequired,\n  startDates: PropTypes.arrayOf(PropTypes.string).isRequired,\n  endDates: PropTypes.arrayOf(PropTypes.string).isRequired,\n  link: PropTypes.string.isRequired,\n};\n\nexport default ProjectCard;\n","import React from \"react\";\nimport { CardDeck } from \"react-bootstrap\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport ProjectCard from \"../components/projectCard\";\n\nexport default function ProjectsPage({ data }) {\n  const projects = data.allMdx.edges;\n\n  return (\n    <Layout active=\"projects\">\n      <Seo title=\"Projects\" description=\"Suhas Dara's projects\" />\n      <div className=\"pt-5\">\n        <h1 className=\"text-center text-light\">Projects</h1>\n        <CardDeck className=\"d-flex flex-row flex-wrap justify-content-center pt-3\">\n          {projects.map((project) => (\n            <ProjectCard\n              key={project.node.id}\n              title={project.node.frontmatter.title}\n              link={project.node.frontmatter.slug}\n              startDates={project.node.frontmatter.startDates}\n              endDates={project.node.frontmatter.endDates}\n              imgSrc={project.node.frontmatter.image.childImageSharp.fluid.src}\n            />\n          ))}\n        </CardDeck>\n      </div>\n    </Layout>\n  );\n}\n\nexport const projectsQuery = graphql`\n  query ProjectsIndexQuery {\n    allMdx(\n      sort: { order: DESC, fields: frontmatter___endDates }\n      filter: { frontmatter: { postType: { eq: \"project\" } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            slug\n            startDates\n            endDates\n            image {\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["className","p","ref","getDate","dateStr","Date","toLocaleDateString","undefined","year","month","day","startDates","endDates","map","s","i","key","length","createWithBsPrefix","_excluded","CardImg","_ref","bsPrefix","variant","_ref$as","as","Component","props","prefix","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","ProjectCardImg","src","alt","rest","title","imgSrc","link","to","ProjectsPage","projects","data","allMdx","edges","active","description","CardDeck","project","node","id","frontmatter","slug","image","childImageSharp","fluid"],"sourceRoot":""}