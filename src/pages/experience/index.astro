---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { formatProjectDate as formatDate, sortByStartDate } from '../../utils/dateUtils';

const experience = await getCollection('experience');
const sortedExperience = sortByStartDate(experience);
---

<BaseLayout title="Experience - Suhas Dara">
  <div>
    <h1 class="text-4xl font-bold mb-8 text-green-300 font-mono">
      <span class="text-green-600">$</span> ls ~/experience
    </h1>
    <div class="space-y-8">
      {sortedExperience.map((exp) => (
        <div class="bg-gray-900 border border-green-600/30 rounded-lg overflow-hidden hover:bg-gray-800 hover:border-green-500/50 transition-colors cursor-pointer" onclick={`window.location.href='/experience/${exp.data.slug || exp.slug}'`}>
            <div class="md:flex">
              <div class="md:w-1/4">
                <img 
                  src={`/experience/${exp.id.split('/')[0]}/${exp.data.image}`}
                  alt={exp.data.company}
                  class="w-full h-32 md:h-24 object-cover border-b md:border-b-0 md:border-r border-green-600/30"
                />
              </div>
              <div class="md:w-3/4 p-4">
                <div class="flex flex-col sm:flex-row sm:justify-between sm:items-start mb-3">
                  <div class="flex-1">
                    <h2 class="text-xl font-semibold mb-1 font-mono">
                      <a href={`/experience/${exp.data.slug || exp.slug}`} class="text-blue-400 hover:text-blue-300 transition-colors font-semibold">
                        {exp.data.title}
                      </a>
                    </h2>
                    <p class="text-green-400 font-medium font-mono">{exp.data.company}</p>
                    {exp.data.where && (
                      <p class="text-green-500 text-sm font-mono">
                        <span class="text-green-600">üìç</span> {exp.data.where}
                      </p>
                    )}
                  </div>
                  <div class="text-left sm:text-right text-xs text-green-600 mt-2 sm:mt-0 sm:ml-4 flex-shrink-0 font-mono">
                    {exp.data.startDates.map((startDate, index) => (
                      <div class="mb-1 whitespace-nowrap">
                        <span class="text-green-500">//</span> {formatDate(startDate)} - {formatDate(exp.data.endDates[index])}
                      </div>
                    ))}
                  </div>
                </div>
                
                <div class="flex flex-wrap gap-1 mb-2">
                  {exp.data.languages.slice(0, 4).map((lang) => (
                    <span class="bg-green-600/20 text-green-300 border border-green-600/40 px-2 py-1 rounded text-xs font-mono">{lang}</span>
                  ))}
                </div>
                
                {exp.data.tools.length > 0 && (
                  <div class="flex flex-wrap gap-1">
                    {exp.data.tools.slice(0, 4).map((tool) => (
                      <span class="bg-gray-700/50 text-green-200 border border-gray-600 px-2 py-1 rounded text-xs font-mono">{tool}</span>
                    ))}
                  </div>
                )}
              </div>
            </div>
          
          {exp.data.companyLink && (
            <div class="px-4 pb-3 border-t border-green-600/20">
              <a 
                href={exp.data.companyLink} 
                target="_blank" 
                rel="noopener noreferrer"
                class="text-blue-400 hover:text-blue-300 font-mono text-sm inline-flex items-center gap-1 mt-3 font-medium"
onclick="(e) => e.stopPropagation()"
              >
                <span class="text-green-600">curl</span> {exp.data.companyLink.replace(/^https?:\/\//, '')} ‚Üí
              </a>
            </div>
          )}
        </div>
      ))}
    </div>
  </div>
</BaseLayout>