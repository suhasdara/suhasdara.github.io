{"version":3,"file":"component---src-templates-project-temp-js-110833f72880289f5dec.js","mappings":"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","sources":["webpack://the-suhas-space/./node_modules/react-bootstrap/esm/Badge.js","webpack://the-suhas-space/./src/components/dateRange.js","webpack://the-suhas-space/./src/templates/projectTemp.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from \"react\";\n\nconst getDate = (dateStr) => {\n  let date = new Date(dateStr);\n  return date.toLocaleDateString(undefined, {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n};\n\nconst DateRange = ({ startDates, endDates }) => {\n  return (\n    <>\n      {startDates.map((s, i) => (\n        <span key={i}>\n          <span className=\"d-inline-block\">{getDate(s)}</span>\n          <span className=\"d-inline-block\">&nbsp;-&nbsp;</span>\n          <span className=\"d-inline-block\">\n            {endDates[i] === \"2099-12-31T00:00:00.000Z\"\n              ? \"Current\"\n              : getDate(endDates[i])}\n            {i !== startDates.length - 1 && \",\"}\n          </span>\n          {i !== startDates.length - 1 && (\n            <span className=\"d-inline-block\">&nbsp;and&nbsp;</span>\n          )}\n        </span>\n      ))}\n    </>\n  );\n};\n\nexport default DateRange;\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport DateRange from \"../components/dateRange\";\nimport ModalImage from \"../components/modalImage\";\nimport Content from \"../components/content\";\n\nexport default function ProjectTemplate({ data }) {\n  const project = data.mdx;\n\n  return (\n    <Layout backLink=\"/projects/\">\n      <SEO title={project.frontmatter.title} />\n      <div className=\"pt-md-5 pt-3\">\n        <h1 className=\"text-light mb-3\">{project.frontmatter.title}</h1>\n        <h4 className=\"text-muted mb-3\">\n          <DateRange\n            startDates={project.frontmatter.startDates}\n            endDates={project.frontmatter.endDates}\n          />\n        </h4>\n        {project.frontmatter.languages && (\n          <div className=\"mb-1\">\n            <p className=\"d-flex flex-wrap align-items-center mb-0\">\n              Languages used:&nbsp;\n              {project.frontmatter.languages.map((l, i) => (\n                <span key={i}>\n                  <Badge pill variant=\"light\">\n                    {l}\n                  </Badge>\n                  &nbsp;\n                </span>\n              ))}\n            </p>\n          </div>\n        )}\n        {project.frontmatter.tools && (\n          <div className=\"mb-1\">\n            <p className=\"d-flex flex-wrap align-items-center mb-0\">\n              Tools used:&nbsp;\n              {project.frontmatter.tools.map((t, i) => (\n                <span key={i}>\n                  <Badge pill variant=\"light\">\n                    {t}\n                  </Badge>\n                  &nbsp;\n                </span>\n              ))}\n            </p>\n          </div>\n        )}\n        {project.frontmatter.repository && (\n          <div className=\"mb-1\">\n            <p className=\"mb-0\">\n              <a\n                href={project.frontmatter.repository}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Link to Repository\n              </a>\n            </p>\n          </div>\n        )}\n        {project.frontmatter.paperSlug && (\n          <div className=\"mb-1\">\n            <p className=\"mb-0\">\n              <a\n                href={project.frontmatter.paperSlug}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Read the Research Paper\n              </a>\n              &nbsp;(unpublished)\n            </p>\n          </div>\n        )}\n        {project.frontmatter.projectLink && (\n          <div className=\"mb-1\">\n            <p className=\"mb-0\">\n              <a href={project.frontmatter.projectLink}>View Live Website</a>\n            </p>\n          </div>\n        )}\n        {project.frontmatter.demoLink && (\n          <div className=\"mb-1\">\n            <p className=\"mb-0\">\n              <a\n                href={project.frontmatter.demoLink}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                View Demo\n              </a>\n            </p>\n          </div>\n        )}\n        <div className=\"my-1 text-center\">\n          <ModalImage\n            src={project.frontmatter.image.childImageSharp.fluid.src}\n            alt={project.frontmatter.title}\n            height={300}\n          />\n        </div>\n        <Content className=\"mt-4\">{project.body}</Content>\n      </div>\n    </Layout>\n  );\n}\n\nexport const projectQuery = graphql`\n  query ProjectBySlug($path: String!) {\n    mdx(frontmatter: { slug: { eq: $path } }) {\n      body\n      frontmatter {\n        title\n        startDates\n        endDates\n        languages\n        tools\n        slug\n        repository\n        paperSlug\n        projectLink\n        demoLink\n        image {\n          childImageSharp {\n            fluid(maxWidth: 1300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_excluded","Badge","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","prefix","displayName","defaultProps","getDate","dateStr","Date","toLocaleDateString","undefined","year","month","day","startDates","endDates","map","s","i","key","length","ProjectTemplate","project","data","mdx","backLink","title","frontmatter","languages","l","tools","t","repository","href","rel","target","paperSlug","projectLink","demoLink","src","image","childImageSharp","fluid","alt","height","body"],"sourceRoot":""}